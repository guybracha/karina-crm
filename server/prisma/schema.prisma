generator client {
  provider   = "prisma-client-js"
  // On some Windows/Node setups, the Node-API (library) engine can fail to load.
  // Force the binary engine for stability.
  engineType = "binary"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Customer {
  id              String   @id @default(uuid())
  name            String
  email           String?
  phone           String?
  city            String?
  tag             String?
  notes           String?
  logoUrl         String?
  photos          CustomerPhoto[]
  // Firebase linkage (optional)
  firebaseUid     String?  @unique
  // Last order date to support follow-up reminders
  lastOrderAt     DateTime?
  tasks           Task[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model CustomerPhoto {
  id          String   @id @default(uuid())
  customerId  String
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  url         String
  createdAt   DateTime @default(now())
}

model Task {
  id          String   @id @default(uuid())
  customerId  String
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  title       String
  dueAt       DateTime
  status      String   @default("open") // open | done
  kind        String?  // optional classification, e.g., followup, call
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([customerId])
}
